// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VCQRU.Data;

#nullable disable

namespace VCQRU.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240917072349_Product")]
    partial class Product
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UniqueCode", b =>
                {
                    b.Property<int>("SeriesNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeriesNumber"));

                    b.Property<int>("BatchNumber")
                        .HasColumnType("int");

                    b.Property<string>("Code1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code2")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("GeneratedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SeriesNumber");

                    b.HasIndex("CompanyId");

                    b.HasIndex("Code1", "Code2")
                        .IsUnique()
                        .HasFilter("[Code1] IS NOT NULL AND [Code2] IS NOT NULL");

                    b.ToTable("UniqueCodes");
                });

            modelBuilder.Entity("VCQRU.Models.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("VCQRU.Models.ProductRegistration", b =>
                {
                    b.Property<string>("Pro_ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("BatchSize")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comp_ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dispatch_Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Display_Product")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Display_Series")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Doc_Flag")
                        .HasColumnType("int");

                    b.Property<string>("Doc_Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label_Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Pro_Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pro_Doc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Pro_Entry_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Pro_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Row_ID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Sound_Flag")
                        .HasColumnType("int");

                    b.Property<string>("Sound_Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Update_Flag")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Update_Flag_E")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Update_Flag_H")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.HasKey("Pro_ID");

                    b.HasIndex("Label_Code")
                        .IsUnique()
                        .HasFilter("[Label_Code] IS NOT NULL");

                    b.ToTable("ProductRegistrations");
                });

            modelBuilder.Entity("UniqueCode", b =>
                {
                    b.HasOne("VCQRU.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });
#pragma warning restore 612, 618
        }
    }
}
